@import './variables.scss';
@import './mixins.scss';

.selectionBar {
	position: relative;
	background-color: $black;
	width: 100vw;
	height: 10vh;
	margin-top: 9vh;

	.displaySelectionButtonStandart, 
	.displaySelectionButtonFullscreen {
		background-color: $black;
		color: $champagne-beige;
		font-size: 2vh;
		font-family: $playfair;
		text-decoration: none;
		margin: 0;	
	}

	.displaySelection {
		background-color: $black;
		border: 0.1vh solid $pearl-gold;
		border-radius: 1vh;
		display: flex;
		position: absolute;
		top: 49%;
		transform: translateY(-50%);
		left: 5%;
	
		// Einheitliche Button-Styling-Basis
		.displaySelectionButtonStandart,
		.displaySelectionButtonFullscreen {
			flex: 1;
			border: none;
			cursor: pointer;
			font-weight: bold;
		}
	
		// Standardanzeige aktiv
		.displaySelectionButtonFullscreen {
			background: radial-gradient(circle, $dark-gold 60%, $pearl-gold);
			color: $black;
			border-top-right-radius: 1vh;
			border-bottom-right-radius: 1vh;
		}
	
		// Vollbildanzeige (inaktiv, aber hoverbar)
		.displaySelectionButtonStandart {
			border-top-left-radius: 1vh;
			border-bottom-left-radius: 1vh;
			background: $black;
			color: $champagne-beige;
	
			&:hover {
				background: radial-gradient(circle, $dark-gold 60%, $pearl-gold);
				color: $black;
			}
		}
	
		// Standard-Button Ã¤ndern, wenn der Fullscreen-Button gehovt wird
		&:has(.displaySelectionButtonStandart:hover) .displaySelectionButtonFullscreen {
			background: $black;
			color: $champagne-beige;
		}
	}
}

.pictureContainer {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(20vw, 1fr));
	grid-gap: 2vw;
	width:90vw;
	height: 70vh;
	margin: 3vh auto;
	
	.picture {
		width: 20vw;
		height: 20vh;
		border: 0.1vh solid $pearl-gold;
		border-radius: 1vh;
	}
}

