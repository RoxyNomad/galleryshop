// Importing variables and mixins for reuse throughout the styles
@import 'variables';
@import 'mixins';

// Container for the artist grid
.artistContainer {
	// Defining the grid layout with responsive columns
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(14vw, 1fr)); // Automatically fill columns, minimum width of 14vw
	grid-gap: 2vw; // Space between grid items
	padding-top: 5vh; // Top padding for the container
	width: 90vw; // 90% of the viewport width
	height: 70vh; // 70% of the viewport height
	margin: 9vh auto; // Center the container and set vertical margin

	// Individual artist item styling
	.artist {
		width: 15vw; // Set width of each artist card to 15% of viewport width
		height: 40vh; // Set height of each artist card to 40% of viewport height
		border: 0.1vh solid $pearl-gold; // Thin border with the pearl gold color
		border-radius: 1vh; // Rounded corners for the artist card
		position: relative; // Set relative positioning to position child elements
		text-align: center; // Center the text inside the artist card
		background: radial-gradient(circle, $dark-gold 60%, $pearl-gold); // Gradient background from dark gold to pearl gold
		z-index: 0; // Set stacking context for the card

		// Profile image container inside the artist card
		.profileImageContainer {
			position: absolute; // Absolute positioning within the artist card
			top: 25%; // Position from the top, 25% of the artist card height
			left: 50%; // Center horizontally
			transform: translateX(-50%); // Adjust horizontal positioning to center the container
			z-index: 2; // Set higher stacking context so it sits above other elements

			// Profile image inside the container
			.profileImage {
				width: 5vw; // Width of profile image is 5% of viewport width
				height: 10vh; // Height of profile image is 10% of viewport height
				border: 0.1vh solid $pearl-gold; // Border around the image
				border-radius: 7vh; // Rounded corners for the profile image (circular shape)
			}
		}

		// Cover image container inside the artist card
		.coverImageContainer {
			position: absolute; // Absolute positioning within the artist card
			top: 0; // Align to the top
			left: 0; // Align to the left
			z-index: 1; // Set lower stacking context to be behind profile image

			// Cover image styling
			.coverImage {
				width: 15vw; // Cover image width set to 15% of viewport width
				border-bottom: 0.1vh solid $pearl-gold; // Border at the bottom
				border-radius: 1vh; // Slightly rounded corners for the cover image
			}
		}

		// Artist name container (centered within the card)
		.artistName {
			position: absolute; // Absolute positioning inside the artist card
			top: 50%; // Position vertically at 50% of the height
			left: 50%; // Position horizontally at 50% of the width
			transform: translate(-50%, -50%); // Adjust for true centering by offsetting by 50% of width and height
		}

		// Artist biography container
		.artistBio {
			position: absolute; // Absolute positioning inside the artist card
			top: 55%; // Position just below the artist name
		}

		// Button for more information about the artist
		.artistButton {
			position: absolute; // Absolute positioning inside the artist card
			bottom: 1%; // Position it close to the bottom edge
			left: 50%; // Center horizontally
			transform: translateX(-50%); // Adjust for true horizontal centering
			background: radial-gradient(circle, $dark-gold 60%, $pearl-gold); // Gradient background for the button
			border: 0.1vh solid $pearl-gold; // Border around the button
			border-radius: 1vh; // Rounded corners for the button
			padding: 1vh; // Padding inside the button
			z-index: 2; // Set higher stacking context so it sits above other elements

			// Link inside the artist button
			.artistLink {
				text-decoration: none; // Remove underline from the link
				color: $black; // Set the text color to black
			}

			// Button hover effect
			&:hover {
				background: $dark-grey; // Change background color on hover
				cursor: pointer; // Show pointer cursor on hover
				z-index: 2; // Ensure button stays above other elements on hover

				// Change link color on button hover
				.artistLink {
					color: $champagne-beige; // Change text color to champagne beige
				}
			}
		}
	}
}
